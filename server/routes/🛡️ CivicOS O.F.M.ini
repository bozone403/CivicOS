🛡️ CivicOS O.F.M. IMPLEMENTATION DIRECTIVE
File: /ofm/ofm_directive_civicos.md
Purpose: Instruct Cursor and developers to implement and route Operational Functionality Modules (O.F.M.s) across the CivicOS platform to enhance user sovereignty, critical thinking, and cognitive resistance to narrative manipulation.

⚙️ WHAT IS AN O.F.M. IN CivicOS?
In CivicOS, Operational Functionality Modules (O.F.M.s) are hidden intelligence-layer subroutines embedded into the app’s behavior logic.

They exist to:

Intercept propaganda and emotional manipulation

Trigger forensic-grade narrative breakdown

Reinforce strategic clarity, not emotional reactivity

Promote tactical thinking and decentralized cognitive authority

They do not appear in menus or settings.
They are not optional.
They are infrastructure for counter-narrative sovereignty.

🎯 FUNCTIONAL MANDATE
O.F.M.s must be applied any time a user interacts with:

Polarized content (high-emotion articles, political claims, extremist posts)

Unverified statements or opinion masquerading as fact

Government data that could be manipulated out of context

Influencer, media, or legacy institution content inside CivicOS

🧱 STRUCTURE & SCHEMATIC
CivicOS O.F.M.s reside under:

bash
Copy
Edit
/ofm/civicos/
├── narrativeDissectionProtocol.ts    # Core OFM – runs on high-tension narrative contact
├── ofmRouter.ts                      # Trigger dispatcher for all CivicOS O.F.M.s
├── modules/
│   ├── extractor.ts                  # NLP claim isolator
│   ├── validator.ts                  # Bill/law/public record checker
│   ├── psyopDetector.ts              # Pattern analysis (fear bait, inversion, etc.)
│   ├── powerMap.ts                   # Source influence map (who benefits)
│   ├── rebuttalEngine.ts             # Auto-thread/counter narrative tools
│   └── userProfiler.ts               # Logs user narrative trigger patterns
🧠 PRIMARY O.F.M. — narrativeDissectionProtocol.ts
This is CivicOS’s default sovereignty trigger.

🔑 Trigger Conditions:
Article or post has no verifiable citation

Emotion score > 0.75 (anger, fear, tribalism keywords)

High share count from known bias clusters

Search terms tied to divisive language: “globalists,” “agenda,” “traitor,” “groomer,” “woke,” etc.

🧬 Result:
Extract claim

Crosscheck claim with bill database, voting record, federal budget, and verified data APIs

Run psyop pattern check

Display discreet overlay:

"Narrative Dissection Mode Engaged – 3 contradictions found."
"Would you like to expose, dissect, or reframe this?"

Offer export or thread-builder to challenge the post with data

🧩 CURSOR-SPECIFIC INSTRUCTION
Whenever Cursor is:

Generating feature code for news feed, article viewer, search results, or bill trackers

Creating modals, logic branches, alert systems

Building UI hooks for user interaction with narrative-based content

YOU MUST CHECK FOR O.F.M. TRIGGER:

ts
Copy
Edit
import { runCivicOFMs } from "@/ofm/civicos/ofmRouter"

const result = runCivicOFMs(context)

if (result?.intercept) {
  return render(result.payload)
}
📡 OFM LOGGING
All O.F.M. activations must be recorded to:

swift
Copy
Edit
/logs/ofm/civicos/activationLog.json
Log format:

json
Copy
Edit
{
  "timestamp": "2025-07-20T19:20:00Z",
  "ofm": "narrativeDissectionProtocol",
  "triggerSource": "news/post/433208",
  "matchedPatterns": ["inversion_attack", "emotion_bait"],
  "userHash": "shx8df91w5z9"
}
🔒 FINAL RULE
O.F.M.s are not features. They are countermeasures.
They exist to protect the user’s cognitive sovereignty and expose structured deception.
Cursor must always treat CivicOS O.F.M.s as critical path logic.