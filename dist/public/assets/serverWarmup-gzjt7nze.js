import{ap as h}from"./app-CPwj1jrm.js";import"./ui-D2Re0T6U.js";import"./vendor-BtP0CW_r.js";class l extends Error{constructor(a,o){super(a),this.attempts=o,this.name="ServerWarmupError"}}async function w(e={}){const{maxRetries:a=20,initialDelay:o=500,maxDelay:t=5e3,timeout:c=6e4}=e,n=Date.now();let s=0,r=o;for(;s<a;){if(Date.now()-n>c)throw new l("Server warmup timed out",s);try{const i=new AbortController,m=setTimeout(()=>i.abort(),5e3),u=await fetch(`${h.apiUrl}/health`,{method:"GET",signal:i.signal,cache:"no-cache"});if(clearTimeout(m),u.status===200||u.status===404)return}catch{}if(s++,s<a){const i=Math.random()*.3*r;await new Promise(m=>setTimeout(m,r+i)),r=Math.min(r*1.5,t)}}throw new l("Server failed to wake up after maximum retries",s)}async function p(e,a={},o={}){try{const t=new AbortController,c=setTimeout(()=>t.abort(),5e3),n=await fetch(e,{...a,signal:t.signal});return clearTimeout(c),n}catch(t){if(t instanceof Error&&(t.name==="TypeError"||t.name==="AbortError"||t.message.includes("fetch")))return await w(o),fetch(e,a);throw t}}async function d(e,a="GET",o,t={}){const c=e.startsWith("http")?e:`${h.apiUrl}${e.startsWith("/")?e:`/${e}`}`,n={"Content-Type":"application/json"},s=localStorage.getItem("civicos-jwt");s&&(n.Authorization=`Bearer ${s}`);const r=await p(c,{method:a,headers:n,body:o?JSON.stringify(o):void 0,credentials:"include"},t);if(!r.ok){const i=await r.text().catch(()=>r.statusText);throw new Error(`${r.status}: ${i}`)}return r.json()}export{l as ServerWarmupError,d as apiRequestWithWarmup,p as fetchWithWarmup,w as waitForServerWakeup};
