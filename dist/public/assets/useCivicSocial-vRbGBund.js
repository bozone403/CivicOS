import{O as u,G as s,s as a,aj as d}from"./index-buf9avXS.js";function o(){return localStorage.getItem("civicos-jwt")||""}const r=d.apiUrl;function y(){return u({queryKey:["civicSocialFeed"],queryFn:async()=>{const i=o(),e=await fetch(`${r}/api/social/feed`,{headers:{Authorization:`Bearer ${i}`}});if(!e.ok)throw new Error("Failed to fetch feed");return(await e.json()).feed||[]}})}function f(){const i=s();return a({mutationFn:async e=>{const n=o(),t=await fetch(`${r}/api/social/posts`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to create post");return t.json()},onSuccess:()=>i.invalidateQueries({queryKey:["civicSocialFeed"]})})}function h(){return a({mutationFn:async({postId:i,...e})=>{const n=o(),t=await fetch(`${r}/api/social/posts/${i}/comment`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to add comment");return t.json()}})}function p(){const i=s();return a({mutationFn:async({postId:e,reaction:n})=>{const t=o(),c=await fetch(`${r}/api/social/posts/${e}/like`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({reaction:n})});if(!c.ok)throw new Error("Failed to react to post");return c.json()},onSuccess:()=>i.invalidateQueries({queryKey:["civicSocialFeed"]})})}function S(){return u({queryKey:["civicSocialFriends"],queryFn:async()=>{const i=o(),e=await fetch(`${r}/api/social/friends`,{headers:{Authorization:`Bearer ${i}`}});if(!e.ok)throw new Error("Failed to fetch friends");return e.json()}})}function F(){const i=s();return a({mutationFn:async({friendId:e})=>{const n=o(),t=await fetch(`${r}/api/social/friends`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({friendId:e,action:"send"})});if(!t.ok)throw new Error("Failed to send friend request");return t.json()},onSuccess:()=>i.invalidateQueries({queryKey:["civicSocialFriends"]})})}function w(){const i=s();return a({mutationFn:async({friendId:e})=>{const n=o(),t=await fetch(`${r}/api/social/friends`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({friendId:e,action:"accept"})});if(!t.ok)throw new Error("Failed to accept friend request");return t.json()},onSuccess:()=>i.invalidateQueries({queryKey:["civicSocialFriends"]})})}function m(){const i=s();return a({mutationFn:async({friendId:e})=>{const n=o(),t=await fetch(`${r}/api/social/friends`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({friendId:e,action:"remove"})});if(!t.ok)throw new Error("Failed to remove friend");return t.json()},onSuccess:()=>i.invalidateQueries({queryKey:["civicSocialFriends"]})})}function v(){const i=s();return a({mutationFn:async e=>{const n=o(),t=await fetch(`${r}/api/notifications`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to send notification");return t.json()},onSuccess:()=>i.invalidateQueries({queryKey:["/api/notifications"]})})}export{S as a,f as b,p as c,h as d,v as e,F as f,w as g,m as h,y as u};
